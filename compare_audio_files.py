#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤.

–°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å—Ç–∞—Ä–æ–≥–æ –∏ –Ω–æ–≤–æ–≥–æ –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤.

–ê–≤—Ç–æ—Ä: AI Assistant
–í–µ—Ä—Å–∏—è: 1.0.0
"""

import subprocess
import json

def get_audio_info(file_path):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞—É–¥–∏–æ—Ñ–∞–π–ª–µ."""
    try:
        cmd = [
            "ffprobe",
            "-v", "quiet",
            "-print_format", "json",
            "-show_format",
            "-show_streams",
            file_path
        ]
        
        result = subprocess.run(cmd, capture_output=True, text=True, check=True)
        return json.loads(result.stdout)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ {file_path}: {e}")
        return None

def compare_audio_files():
    """–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤."""
    print("üîç –°–†–ê–í–ù–ï–ù–ò–ï –ê–£–î–ò–û–§–ê–ô–õ–û–í")
    print("=" * 50)
    
    # –§–∞–π–ª—ã –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    old_file = "demo_russian_test_1.wav"
    new_file = "demo_russian_test_fixed_1.wav"
    
    print(f"üìÅ –°—Ç–∞—Ä—ã–π —Ñ–∞–π–ª: {old_file}")
    print(f"üìÅ –ù–æ–≤—ã–π —Ñ–∞–π–ª: {new_file}")
    print()
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–∞—Ö
    old_info = get_audio_info(old_file)
    new_info = get_audio_info(new_file)
    
    if not old_info or not new_info:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–∞—Ö")
        return
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    old_stream = old_info["streams"][0]
    new_stream = new_info["streams"][0]
    
    old_format = old_info["format"]
    new_format = new_info["format"]
    
    print("üìä –ü–ê–†–ê–ú–ï–¢–†–´ –ê–£–î–ò–û:")
    print("-" * 30)
    print(f"–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:")
    print(f"  –°—Ç–∞—Ä—ã–π: {old_format['duration']} —Å–µ–∫")
    print(f"  –ù–æ–≤—ã–π:  {new_format['duration']} —Å–µ–∫")
    print(f"  –†–∞–∑–Ω–∏—Ü–∞: {float(new_format['duration']) / float(old_format['duration']):.2f}x")
    print()
    
    print(f"–ß–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏:")
    print(f"  –°—Ç–∞—Ä—ã–π: {old_stream['sample_rate']} Hz")
    print(f"  –ù–æ–≤—ã–π:  {new_stream['sample_rate']} Hz")
    print()
    
    print(f"–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞:")
    print(f"  –°—Ç–∞—Ä—ã–π: {int(old_format['size']) / 1024:.1f} KB")
    print(f"  –ù–æ–≤—ã–π:  {int(new_format['size']) / 1024:.1f} KB")
    print()
    
    print(f"–ë–∏—Ç—Ä–µ–π—Ç:")
    print(f"  –°—Ç–∞—Ä—ã–π: {old_stream['bit_rate']} bps")
    print(f"  –ù–æ–≤—ã–π:  {new_stream['bit_rate']} bps")
    print()
    
    # –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º—ã
    print("üîç –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú–´:")
    print("-" * 30)
    print("‚ùå –ü–†–û–ë–õ–ï–ú–ê –í –°–¢–ê–†–û–ú –§–ê–ô–õ–ï:")
    print("  - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π pitch shifting")
    print("  - –ö–æ–º–∞–Ω–¥–∞ 'asetrate=44100*1.2' –∏–∑–º–µ–Ω—è–ª–∞ —á–∞—Å—Ç–æ—Ç—É –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏")
    print("  - –≠—Ç–æ –¥–µ–ª–∞–ª–æ –∞—É–¥–∏–æ –±—ã—Å—Ç—Ä–µ–µ –≤ 1.2 —Ä–∞–∑–∞")
    print("  - –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —É–º–µ–Ω—å—à–∞–ª–∞—Å—å —Å 2.47 —Å–µ–∫ –¥–æ 1.03 —Å–µ–∫")
    print()
    
    print("‚úÖ –†–ï–®–ï–ù–ò–ï –í –ù–û–í–û–ú –§–ê–ô–õ–ï:")
    print("  - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π pitch shifting")
    print("  - –ü–∏—Ç—á –∏–∑–º–µ–Ω—è–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏")
    print("  - –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ—Å—Ç–∞–µ—Ç—Å—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–π")
    print("  - –ê—É–¥–∏–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç—å—é")
    print()
    
    print("üéµ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("-" * 30)
    print("1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞—É–¥–∏–æ")
    print("2. –ò–∑–±–µ–≥–∞–π—Ç–µ 'asetrate' –¥–ª—è pitch shifting")
    print("3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'rubberband' –∏–ª–∏ 'atempo' —Ñ–∏–ª—å—Ç—Ä—ã")
    print("4. –í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤")

if __name__ == "__main__":
    compare_audio_files() 