import React, { useState, useCallback } from 'react';
import PhotoUpload from './PhotoUpload';

interface AvatarSettingsProps {
  onSettingsSaved: (settings: AvatarSettings) => void;
}

export interface AvatarSettings {
  photos: File[];
  voiceSamples: File[];
  personality: string;
  name: string;
  description: string;
}

const AvatarSettings: React.FC<AvatarSettingsProps> = ({ onSettingsSaved }) => {
  const [settings, setSettings] = useState<AvatarSettings>({
    photos: [],
    voiceSamples: [],
    personality: '',
    name: '',
    description: ''
  });
  
  const [activeTab, setActiveTab] = useState<'photos' | 'voice' | 'personality'>('photos');
  const [isSaving, setIsSaving] = useState(false);

  const handlePhotosUploaded = useCallback((photos: File[]) => {
    setSettings(prev => ({
      ...prev,
      photos
    }));
  }, []);

  const handleVoiceSamplesUploaded = useCallback((samples: File[]) => {
    setSettings(prev => ({
      ...prev,
      voiceSamples: samples
    }));
  }, []);

  const handleInputChange = useCallback((field: keyof AvatarSettings, value: string) => {
    setSettings(prev => ({
      ...prev,
      [field]: value
    }));
  }, []);

  const handleSave = useCallback(async () => {
    if (settings.photos.length === 0) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ —Ñ–æ—Ç–æ');
      return;
    }

    setIsSaving(true);
    try {
      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç API –≤—ã–∑–æ–≤ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
      await new Promise(resolve => setTimeout(resolve, 1000)); // –ò–º–∏—Ç–∞—Ü–∏—è API
      onSettingsSaved(settings);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
      alert('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫');
    } finally {
      setIsSaving(false);
    }
  }, [settings, onSettingsSaved]);

  const tabs = [
    { id: 'photos', label: 'üì∏ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏', icon: 'üì∏' },
    { id: 'voice', label: 'üé§ –ì–æ–ª–æ—Å', icon: 'üé§' },
    { id: 'personality', label: 'üß† –õ–∏—á–Ω–æ—Å—Ç—å', icon: 'üß†' }
  ] as const;

  return (
    <div className="max-w-4xl mx-auto p-6">
      <div className="mb-8">
        <h1 className="text-3xl font-bold text-gray-900 mb-2">
          –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –∞–≤–∞—Ç–∞—Ä–∞
        </h1>
        <p className="text-gray-600">
          –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –∑–∞–ø–∏—à–∏—Ç–µ –≥–æ–ª–æ—Å –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ª–∏—á–Ω–æ—Å—Ç—å –≤–∞—à–µ–≥–æ –∞–≤–∞—Ç–∞—Ä–∞
        </p>
      </div>

      {/* –í–∫–ª–∞–¥–∫–∏ */}
      <div className="border-b border-gray-200 mb-8">
        <nav className="-mb-px flex space-x-8">
          {tabs.map((tab) => (
            <button
              key={tab.id}
              onClick={() => setActiveTab(tab.id)}
              className={`py-2 px-1 border-b-2 font-medium text-sm ${
                activeTab === tab.id
                  ? 'border-blue-500 text-blue-600'
                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
              }`}
            >
              <span className="mr-2">{tab.icon}</span>
              {tab.label}
            </button>
          ))}
        </nav>
      </div>

      {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∫–ª–∞–¥–æ–∫ */}
      <div className="min-h-[400px]">
        {activeTab === 'photos' && (
          <div className="space-y-6">
            <div>
              <h2 className="text-xl font-semibold text-gray-900 mb-4">
                –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
              </h2>
              <p className="text-gray-600 mb-6">
                –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ª–∏—Ü–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞. 
                –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 3-5 —Ñ–æ—Ç–æ —Å —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∫—É—Ä—Å–æ–≤.
              </p>
            </div>
            
            <PhotoUpload
              onPhotosUploaded={handlePhotosUploaded}
              maxFiles={5}
              acceptedFormats={['image/jpeg', 'image/png', 'image/webp']}
            />
          </div>
        )}

        {activeTab === 'voice' && (
          <div className="space-y-6">
            <div>
              <h2 className="text-xl font-semibold text-gray-900 mb-4">
                –ó–∞–ø–∏—Å—å –≥–æ–ª–æ—Å–∞
              </h2>
              <p className="text-gray-600 mb-6">
                –ó–∞–ø–∏—à–∏—Ç–µ –æ–±—Ä–∞–∑—Ü—ã –≥–æ–ª–æ—Å–∞ –¥–ª—è –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è. 
                –ì–æ–≤–æ—Ä–∏—Ç–µ —á–µ—Ç–∫–æ –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ, –≤–∫–ª—é—á–∞—è —Ä–∞–∑–Ω—ã–µ —ç–º–æ—Ü–∏–∏.
              </p>
            </div>
            
            <div className="border-2 border-dashed border-gray-300 rounded-lg p-8 text-center">
              <div className="text-6xl text-gray-400 mb-4">üé§</div>
              <p className="text-lg font-medium text-gray-700 mb-2">
                –ó–∞–ø–∏—Å—å –≥–æ–ª–æ—Å–∞
              </p>
              <p className="text-sm text-gray-500 mb-4">
                –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –Ω–∞—á–∞–ª–∞ –∑–∞–ø–∏—Å–∏ –≥–æ–ª–æ—Å–∞
              </p>
              <button className="px-6 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors">
                üéôÔ∏è –ù–∞—á–∞—Ç—å –∑–∞–ø–∏—Å—å
              </button>
            </div>
          </div>
        )}

        {activeTab === 'personality' && (
          <div className="space-y-6">
            <div>
              <h2 className="text-xl font-semibold text-gray-900 mb-4">
                –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–∏—á–Ω–æ—Å—Ç–∏
              </h2>
              <p className="text-gray-600 mb-6">
                –û–ø–∏—à–∏—Ç–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä –∏ —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –∞–≤–∞—Ç–∞—Ä–∞
              </p>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ò–º—è –∞–≤–∞—Ç–∞—Ä–∞
                </label>
                <input
                  type="text"
                  value={settings.name}
                  onChange={(e) => handleInputChange('name', e.target.value)}
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∞–≤–∞—Ç–∞—Ä–∞"
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                />
              </div>
              
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –í–æ–∑—Ä–∞—Å—Ç
                </label>
                <select className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
                  <option>–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç</option>
                  <option>5-10 –ª–µ—Ç</option>
                  <option>11-15 –ª–µ—Ç</option>
                  <option>16-20 –ª–µ—Ç</option>
                  <option>21-25 –ª–µ—Ç</option>
                  <option>26-30 –ª–µ—Ç</option>
                  <option>31+ –ª–µ—Ç</option>
                </select>
              </div>
            </div>
            
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –û–ø–∏—Å–∞–Ω–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏
              </label>
              <textarea
                value={settings.description}
                onChange={(e) => handleInputChange('description', e.target.value)}
                placeholder="–û–ø–∏—à–∏—Ç–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä, –∏–Ω—Ç–µ—Ä–µ—Å—ã, —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞..."
                rows={4}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              />
            </div>
            
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è
              </label>
              <textarea
                value={settings.personality}
                onChange={(e) => handleInputChange('personality', e.target.value)}
                placeholder="–û–ø–∏—à–∏—Ç–µ –∫–∞–∫ –∞–≤–∞—Ç–∞—Ä –¥–æ–ª–∂–µ–Ω –æ–±—â–∞—Ç—å—Å—è: —Ñ–æ—Ä–º–∞–ª—å–Ω–æ/–Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–æ, –¥—Ä—É–∂–µ–ª—é–±–Ω–æ/—Å–µ—Ä—å–µ–∑–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Å–ª–æ–≤–∞ –∏ —Ñ—Ä–∞–∑—ã..."
                rows={4}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              />
            </div>
          </div>
        )}
      </div>

      {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
      <div className="flex justify-between items-center mt-8 pt-6 border-t border-gray-200">
        <div className="text-sm text-gray-500">
          {settings.photos.length > 0 && (
            <span className="mr-4">üì∏ –§–æ—Ç–æ: {settings.photos.length}</span>
          )}
          {settings.voiceSamples.length > 0 && (
            <span>üé§ –ê—É–¥–∏–æ: {settings.voiceSamples.length}</span>
          )}
        </div>
        
        <div className="space-x-4">
          <button
            onClick={() => setActiveTab('photos')}
            disabled={isSaving}
            className="px-4 py-2 text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200 disabled:opacity-50 transition-colors"
          >
            –ù–∞–∑–∞–¥
          </button>
          <button
            onClick={handleSave}
            disabled={isSaving || settings.photos.length === 0}
            className="px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
          >
            {isSaving ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏'}
          </button>
        </div>
      </div>
    </div>
  );
};

export default AvatarSettings; 