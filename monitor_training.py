#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–±—É—á–µ–Ω–∏—è YourTTS
"""

import os
import time
import psutil
import subprocess
from pathlib import Path

def monitor_training():
    """–ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç –ø—Ä–æ—Ü–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è YourTTS"""
    print("üîç –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ–±—É—á–µ–Ω–∏—è YourTTS")
    print("=" * 50)
    
    while True:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è
        training_processes = []
        for proc in psutil.process_iter(['pid', 'name', 'cmdline', 'cpu_percent', 'memory_percent']):
            try:
                if 'train_tts' in ' '.join(proc.info['cmdline'] or []):
                    training_processes.append(proc.info)
            except (psutil.NoSuchProcess, psutil.AccessDenied):
                continue
        
        if training_processes:
            print(f"‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è –∞–∫—Ç–∏–≤–µ–Ω: PID {training_processes[0]['pid']}")
            print(f"   CPU: {training_processes[0]['cpu_percent']:.1f}%")
            print(f"   Memory: {training_processes[0]['memory_percent']:.1f}%")
        else:
            print("‚ùå –ü—Ä–æ—Ü–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω")
            break
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–ø–∫—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
        if Path("tts_train_output").exists():
            files = list(Path("tts_train_output").glob("*"))
            if files:
                print(f"üìÅ –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ –≤ tts_train_output: {len(files)}")
                for file in files[-3:]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Ñ–∞–π–ª–∞
                    print(f"   {file.name}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ GPU
        try:
            result = subprocess.run(['nvidia-smi', '--query-gpu=utilization.gpu,memory.used,memory.total', '--format=csv,noheader,nounits'], 
                                  capture_output=True, text=True)
            if result.returncode == 0:
                gpu_info = result.stdout.strip().split(', ')
                print(f"üéÆ GPU: {gpu_info[0]}% | Memory: {gpu_info[1]}/{gpu_info[2]} MB")
        except:
            print("üéÆ GPU: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        
        print("-" * 50)
        time.sleep(30)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥

if __name__ == "__main__":
    try:
        monitor_training()
    except KeyboardInterrupt:
        print("\nüëã –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω") 