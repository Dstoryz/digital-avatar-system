#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ —Å–∏—Å—Ç–µ–º—ã —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –∞–≤–∞—Ç–∞—Ä–∞
# –ê–≤—Ç–æ—Ä: –ê–≤–∞–±–æ—Ç
# –í–µ—Ä—Å–∏—è: 1.0.0

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ PID —Ñ–∞–π–ª—É
stop_service() {
    local service_name=$1
    local pid_file=$2
    
    if [ -f "$pid_file" ]; then
        local pid=$(cat "$pid_file")
        
        if ps -p "$pid" > /dev/null 2>&1; then
            log_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ $service_name (PID: $pid)..."
            
            # –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å gracefully
            kill -TERM "$pid" 2>/dev/null
            
            # –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥
            sleep 5
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å
            if ps -p "$pid" > /dev/null 2>&1; then
                log_warning "$service_name –Ω–µ –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è gracefully, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞..."
                kill -KILL "$pid" 2>/dev/null
                sleep 2
            fi
            
            # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
            if ps -p "$pid" > /dev/null 2>&1; then
                log_error "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å $service_name"
                return 1
            else
                log_success "$service_name –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
                rm -f "$pid_file"
                return 0
            fi
        else
            log_warning "$service_name —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            rm -f "$pid_file"
            return 0
        fi
    else
        log_warning "PID —Ñ–∞–π–ª –¥–ª—è $service_name –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 0
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –ø–æ –∏–º–µ–Ω–∏
stop_processes_by_name() {
    local process_name=$1
    local service_name=$2
    
    log_info "–ü–æ–∏—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ $service_name..."
    
    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∏–º–µ–Ω–µ–º
    local pids=$(pgrep -f "$process_name" 2>/dev/null || true)
    
    if [ -n "$pids" ]; then
        log_info "–ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ—Ü–µ—Å—Å—ã $service_name: $pids"
        
        for pid in $pids; do
            log_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ $service_name (PID: $pid)..."
            
            # –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å gracefully
            kill -TERM "$pid" 2>/dev/null
            
            # –ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã
            sleep 3
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å
            if ps -p "$pid" > /dev/null 2>&1; then
                log_warning "–ü—Ä–æ—Ü–µ—Å—Å $service_name –Ω–µ –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è gracefully, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞..."
                kill -KILL "$pid" 2>/dev/null
                sleep 1
            fi
            
            # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
            if ps -p "$pid" > /dev/null 2>&1; then
                log_error "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å $service_name (PID: $pid)"
            else
                log_success "–ü—Ä–æ—Ü–µ—Å—Å $service_name (PID: $pid) –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            fi
        done
    else
        log_info "–ü—Ä–æ—Ü–µ—Å—Å—ã $service_name –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
main() {
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –∞–≤–∞—Ç–∞—Ä–∞"
    echo "====================================="
    echo ""
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ –ø–æ PID —Ñ–∞–π–ª–∞–º
    log_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ –ø–æ PID —Ñ–∞–π–ª–∞–º..."
    
    stop_service "Backend API" "logs/backend.pid"
    stop_service "HierSpeech_TTS" "logs/hier_tts.pid"
    stop_service "SadTalker" "logs/sadtalker.pid"
    stop_service "Frontend" "logs/frontend.pid"
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ –∏–º–µ–Ω–∞–º –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    log_info "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
    
    stop_processes_by_name "uvicorn.*app.main:app" "Backend API"
    stop_processes_by_name "hier_api_server.py" "HierSpeech_TTS"
    stop_processes_by_name "sadtalker_api_server.py" "SadTalker"
    stop_processes_by_name "vite.*dev" "Frontend"
    stop_processes_by_name "node.*dev" "Frontend"
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –Ω–∞ –ø–æ—Ä—Ç–∞—Ö
    log_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –Ω–∞ –ø–æ—Ä—Ç–∞—Ö..."
    
    local ports=(8000 8001 8002 3000)
    
    for port in "${ports[@]}"; do
        local pid=$(lsof -ti:$port 2>/dev/null || true)
        
        if [ -n "$pid" ]; then
            log_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ –Ω–∞ –ø–æ—Ä—Ç—É $port (PID: $pid)..."
            kill -TERM "$pid" 2>/dev/null
            sleep 2
            
            if ps -p "$pid" > /dev/null 2>&1; then
                log_warning "–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ –Ω–∞ –ø–æ—Ä—Ç—É $port..."
                kill -KILL "$pid" 2>/dev/null
            fi
        fi
    done
    
    # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    log_info "–û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
    
    if [ -d "logs" ]; then
        rm -f logs/*.pid
        log_success "PID —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã"
    fi
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
    
    local remaining_processes=0
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç–∞—Ö
    for port in "${ports[@]}"; do
        if lsof -i:$port > /dev/null 2>&1; then
            log_warning "–ü–æ—Ä—Ç $port –≤—Å–µ –µ—â–µ –∑–∞–Ω—è—Ç"
            remaining_processes=$((remaining_processes + 1))
        fi
    done
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
    if pgrep -f "uvicorn.*app.main:app" > /dev/null 2>&1; then
        log_warning "Backend API –ø—Ä–æ—Ü–µ—Å—Å—ã –≤—Å–µ –µ—â–µ –∞–∫—Ç–∏–≤–Ω—ã"
        remaining_processes=$((remaining_processes + 1))
    fi
    
    if pgrep -f "hier_api_server.py" > /dev/null 2>&1; then
        log_warning "HierSpeech_TTS –ø—Ä–æ—Ü–µ—Å—Å—ã –≤—Å–µ –µ—â–µ –∞–∫—Ç–∏–≤–Ω—ã"
        remaining_processes=$((remaining_processes + 1))
    fi
    
    if pgrep -f "sadtalker_api_server.py" > /dev/null 2>&1; then
        log_warning "SadTalker –ø—Ä–æ—Ü–µ—Å—Å—ã –≤—Å–µ –µ—â–µ –∞–∫—Ç–∏–≤–Ω—ã"
        remaining_processes=$((remaining_processes + 1))
    fi
    
    if pgrep -f "vite.*dev" > /dev/null 2>&1; then
        log_warning "Frontend –ø—Ä–æ—Ü–µ—Å—Å—ã –≤—Å–µ –µ—â–µ –∞–∫—Ç–∏–≤–Ω—ã"
        remaining_processes=$((remaining_processes + 1))
    fi
    
    if [ $remaining_processes -eq 0 ]; then
        log_success "–í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"
    else
        log_warning "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –≤—Å–µ –µ—â–µ –∞–∫—Ç–∏–≤–Ω—ã. –í–æ–∑–º–æ–∂–Ω–æ, –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞."
    fi
    
    echo ""
    echo "üìã –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤:"
    echo "   Backend: tail -f logs/backend.log"
    echo "   HierSpeech_TTS: tail -f logs/hier_tts.log"
    echo "   SadTalker: tail -f logs/sadtalker.log"
    echo "   Frontend: tail -f logs/frontend.log"
    echo ""
    echo "üöÄ –î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: ./start_all_services.sh"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
trap 'log_info "–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã..."; exit 0' SIGINT SIGTERM

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@" 